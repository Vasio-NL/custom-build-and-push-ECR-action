name: 'Build and deploy action'
description: 'Builds and deploys Vasio applications. Requires cluster credentials to authenticate with the cluster.'
inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID used to log in to Amazon ECR'
    required: false
    default: ''
  aws-secret-access-key:
    description: 'AWS Secret Access Key used to log in to Amazon ECR'
    required: false
    default: ''
  container-registry-url:
    description: 'URL for the container registry'
    required: false
    default: ''
  container-registry-username:
    description: 'Username for the container registry'
    required: false
    default: ''
  container-registry-password:
    description: 'Password for the container registry'
    required: false
    default: ''
  container-repository-name:
    description: 'The name of the container repository (middle part of the image tag)'
    required: true
    default: ''
  dockerfile-path:
    description: 'Path to the Dockerfile'
    required: true
    default: ''
  docker-build-context:
    description: 'The build context for the docker build'
    required: false
    default: '.'
  docker-build-args:
    description: 'Additional build arguments for the docker build'
    required: false
    default: ''
  docker-image-name:
    description: 'The name of the image'
    required: true
    default: ''
  github-sha:
    description: 'The commit SHA, to be used to make the image tag unique'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Validate credential input (1/2)
      if: (inputs.aws-access-key-id != '' || inputs.aws-secret-access-key != '') && (inputs.container-registry-username != '' || inputs.container-registry-password != '')
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Cannot set both AWS credentials and non-AWS container registry credentials')
    - name: Validate credential input (2/2)
      if: inputs.aws-access-key-id == '' && inputs.aws-secret-access-key == '' && inputs.container-registry-username == '' && inputs.container-registry-password == ''
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Must set either AWS credentials or non-AWS container registry credentials')

    - name: Configure AWS credentials
      if: inputs.aws-access-key-id != '' || inputs.aws-secret-access-key != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-west-1

    - name: Log in to Amazon ECR
      if: inputs.aws-access-key-id != '' && inputs.aws-secret-access-key != ''
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push to Amazon ECR
      if: inputs.aws-access-key-id != '' && inputs.aws-secret-access-key != ''
      uses: docker/build-push-action@v4
      with:
        context: inputs.docker-build-context
        file: inputs.dockerfile-path
        push: true
        build-args: inputs.docker-build-args
        tags: "${{ steps.login-ecr.outputs.registry }}/${{ inputs.container-repository-name }}/${{ inputs.docker-image-name }}:${{ inputs.github-sha }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Log in to the container registry (non-AWS)
      if: inputs.container-registry-url != '' && inputs.container-registry-username != '' && inputs.container-registry-password != ''
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ inputs.container-registry-url }}
        username: ${{ inputs.container-registry-username }}
        password: ${{ inputs.container-registry-password }}

    - name: Build and push (non-AWS)
      if: inputs.container-registry-url != '' && inputs.container-registry-username != '' && inputs.container-registry-password != ''
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ./wegwijzer/
        file: ./wegwijzer/backend/docker/Dockerfile-production
        tags: "${{ vars.REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{github.sha}}-${{github.run_id}}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
