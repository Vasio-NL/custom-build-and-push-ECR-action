name: 'Build and deploy action'
description: 'Builds and deploys Vasio applications. Requires cluster credentials to authenticate with the cluster.'
inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID used to log in to Amazon ECR'
    required: true
    default: ''
  aws-secret-access-key:
    description: 'AWS Secret Access Key used to log in to Amazon ECR'
    required: true
    default: ''
  container-repository-name:
    description: 'The name of the container repository (middle part of the image tag)'
    required: true
    default: ''
  dockerfile-path:
    description: 'Path to the Dockerfile'
    required: true
    default: ''
  docker-build-context:
    description: 'The build context for the docker build'
    required: false
    default: '.'
  docker-build-args:
    description: 'Additional build arguments for the docker build'
    required: false
    default: ''
  docker-image-name:
    description: 'The name of the image'
    required: true
    default: ''
  github-sha:
    description: 'The commit SHA, to be used to make the image tag unique'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-west-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ${{ inputs.docker-build-context }}
        file: ${{ inputs.dockerfile-path }}
        build-args: ${{ inputs.docker-build-args }}
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.container-repository-name }}/${{ inputs.docker-image-name }}:${{ inputs.github-sha }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
